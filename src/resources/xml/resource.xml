<?xml version="1.0"?>

<resource xmlns="http://www.wyona.org/yanel/1.0"
  name="xml"
  namespace="http://www.wyona.org/yanel/resource/1.0"
  class="org.wyona.yanel.impl.resources.XMLResource"
  >
<description>
XML whereas an XSLT or multiple XSLTs can be specified and applied
</description>

<rtd>
  <property name="mime-type"/> <!-- optional -->
  <property name="source-view-mime-type"/> <!-- TODO: Description -->
  <property name="xslt" multiple="true"/> <!-- optional, if not set, the the source XML will be sent as response -->

  <!-- "yanel-path" allows to instantiate another resource which provides XML (or retrieve an XML from the content repository of the realm). For example value="/sitetree-en.xml" or value="yanelresource:/hello.xml" or "http://127.0.0.1:8080/yanel/from-scratch-realm/en/index.html?yanel.resource.viewid=source" -->
  <property name="yanel-path"/> <!-- optional, if not set, then a 1:1 resolving will be applied. Please make sure not to introduce loops, e.g. by referencing the resource by itself! -->
  <!-- Optional: Path wildcard character matcher --> 
  <property name="yanel-path-matcher"/> <!-- for example: <yanel:property name="yanel-path-matcher" value="/rest/user/*/profile.json"/> can be mapped onto <yanel:property name="yanel-path" value="/user/{1}/profile.xml"/> -->

  <!-- When using http or https, then it might make sense to set an optional connection or socket timeout -->
  <property name="connection-timeout" default-value="0"/> <!-- optional, milliseconds -->
  <property name="socket-timeout" default-value="0"/> <!-- optional, milliseconds -->

  <!-- Optional BASIC AUTH credentials -->
  <property name="username"/> <!-- optional -->
  <property name="password"/> <!-- optional -->

  <property name="workflow-schema"/> <!-- optional -->
  <property name="check-comments"/> <!-- optional and default is 'false' -->
  <property name="aggregate-comments"/> <!-- optional and default is 'false' -->
</rtd>

<!-- NOTE: Since the XML resource is creatable one can also specify various parameters for creation, e.g. mime-type, source-mime-type, template.
           The "resource creator" resource for example can use these parameters as follows:

<yanel:resource-config xmlns:yanel="http://www.wyona.org/yanel/rti/1.0">
  <yanel:rti name="resource-creator" namespace="http://www.wyona.org/yanel/resource/1.0"/>

  <yanel:property name="lookin" value="/meetings/"/>

  <yanel:custom-config>
    <rc:resource-types xmlns:rc="http://www.wyona.org/yanel/resource/resource-creator/1.0">
      <rc:resource-type name="xml" namespace="http://www.wyona.org/yanel/resource/1.0">
        <rc:display-name>New Meetings Page</rc:display-name>

        <rc:property name="mime-type" value="text/html"/>
        <rc:property name="source-mime-type" value="application/xhtml+xml"/>
        <rc:property name="template" value="yanelrepo:/app_v1/meetings-page-template.html"/>

      </rc:resource-type>
    </rc:resource-types>
  </yanel:custom-config>
</yanel:resource-config>

whereas these parameters are being passed with a prefix "rp", e.g. "rp.template" or "rp.title".
-->
</resource>
